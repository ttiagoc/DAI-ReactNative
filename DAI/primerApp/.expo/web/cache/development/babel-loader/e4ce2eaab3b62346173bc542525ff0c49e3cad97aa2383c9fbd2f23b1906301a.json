{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\nvar ChildListCollection = function () {\n  function ChildListCollection() {\n    _classCallCheck(this, ChildListCollection);\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  _createClass(ChildListCollection, [{\n    key: \"add\",\n    value: function add(list, cellKey) {\n      var _this$_cellKeyToChild;\n      invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n      var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n      cellLists.add(list);\n      this._cellKeyToChildren.set(cellKey, cellLists);\n      this._childrenToCellKey.set(list, cellKey);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(list) {\n      var cellKey = this._childrenToCellKey.get(list);\n      invariant(cellKey != null, 'Trying to remove non-present child list');\n      this._childrenToCellKey.delete(list);\n      var cellLists = this._cellKeyToChildren.get(cellKey);\n      invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n      cellLists.delete(list);\n      if (cellLists.size === 0) {\n        this._cellKeyToChildren.delete(cellKey);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n        var listSet = _step.value;\n        for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n          var list = _step2.value;\n          fn(list);\n        }\n      }\n    }\n  }, {\n    key: \"forEachInCell\",\n    value: function forEachInCell(cellKey, fn) {\n      var _this$_cellKeyToChild2;\n      var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n      for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n        var list = _step3.value;\n        fn(list);\n      }\n    }\n  }, {\n    key: \"anyInCell\",\n    value: function anyInCell(cellKey, fn) {\n      var _this$_cellKeyToChild3;\n      var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n      for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n        var list = _step4.value;\n        if (fn(list)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._childrenToCellKey.size;\n    }\n  }]);\n  return ChildListCollection;\n}();\nexport { ChildListCollection as default };","map":{"version":3,"names":["_createForOfIteratorHelperLoose","invariant","ChildListCollection","_cellKeyToChildren","Map","_childrenToCellKey","list","cellKey","_this$_cellKeyToChild","has","cellLists","get","Set","add","set","delete","size","fn","_iterator","values","_step","done","listSet","value","_iterator2","_step2","_this$_cellKeyToChild2","_iterator3","_step3","_this$_cellKeyToChild3","_iterator4","_step4"],"sources":["C:/Users/devandroid/Desktop/DAI-ReactNative/DAI/primerApp/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/ChildListCollection.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}