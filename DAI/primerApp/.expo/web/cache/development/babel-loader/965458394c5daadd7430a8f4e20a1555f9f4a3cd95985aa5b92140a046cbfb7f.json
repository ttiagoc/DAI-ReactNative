{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport Animation from \"./Animation\";\nimport SpringConfig from \"../SpringConfig\";\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from \"../NativeAnimatedHelper\";\nimport AnimatedColor from \"../nodes/AnimatedColor\";\nvar SpringAnimation = function (_Animation) {\n  _inherits(SpringAnimation, _Animation);\n  var _super = _createSuper(SpringAnimation);\n  function SpringAnimation(config) {\n    var _this;\n    _classCallCheck(this, SpringAnimation);\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n    _this = _super.call(this);\n    _this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    _this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    _this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    _this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    _this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    _this._toValue = config.toValue;\n    _this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    _this._useNativeDriver = shouldUseNativeDriver(config);\n    _this._platformConfig = config.platformConfig;\n    _this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !_this._useNativeDriver;\n    _this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      _this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      _this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      _this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      _this._stiffness = springConfig.stiffness;\n      _this._damping = springConfig.damping;\n      _this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n      _this._stiffness = _springConfig.stiffness;\n      _this._damping = _springConfig.damping;\n      _this._mass = 1;\n    }\n    invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(_this._damping > 0, 'Damping value must be greater than 0');\n    invariant(_this._mass > 0, 'Mass value must be greater than 0');\n    return _this;\n  }\n  _createClass(SpringAnimation, [{\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      var _this$_initialVelocit;\n      return {\n        type: 'spring',\n        overshootClamping: this._overshootClamping,\n        restDisplacementThreshold: this._restDisplacementThreshold,\n        restSpeedThreshold: this._restSpeedThreshold,\n        stiffness: this._stiffness,\n        damping: this._damping,\n        mass: this._mass,\n        initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n        toValue: this._toValue,\n        iterations: this.__iterations,\n        platformConfig: this._platformConfig\n      };\n    }\n  }, {\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n      var _this2 = this;\n      this.__active = true;\n      this._startPosition = fromValue;\n      this._lastPosition = this._startPosition;\n      this._onUpdate = onUpdate;\n      this.__onEnd = onEnd;\n      this._lastTime = Date.now();\n      this._frameTime = 0.0;\n      if (previousAnimation instanceof SpringAnimation) {\n        var internalState = previousAnimation.getInternalState();\n        this._lastPosition = internalState.lastPosition;\n        this._lastVelocity = internalState.lastVelocity;\n        this._initialVelocity = this._lastVelocity;\n        this._lastTime = internalState.lastTime;\n      }\n      var start = function start() {\n        if (_this2._useNativeDriver) {\n          _this2.__startNativeAnimation(animatedValue);\n        } else {\n          _this2.onUpdate();\n        }\n      };\n      if (this._delay) {\n        this._timeout = setTimeout(start, this._delay);\n      } else {\n        start();\n      }\n    }\n  }, {\n    key: \"getInternalState\",\n    value: function getInternalState() {\n      return {\n        lastPosition: this._lastPosition,\n        lastVelocity: this._lastVelocity,\n        lastTime: this._lastTime\n      };\n    }\n  }, {\n    key: \"onUpdate\",\n    value: function onUpdate() {\n      var MAX_STEPS = 64;\n      var now = Date.now();\n      if (now > this._lastTime + MAX_STEPS) {\n        now = this._lastTime + MAX_STEPS;\n      }\n      var deltaTime = (now - this._lastTime) / 1000;\n      this._frameTime += deltaTime;\n      var c = this._damping;\n      var m = this._mass;\n      var k = this._stiffness;\n      var v0 = -this._initialVelocity;\n      var zeta = c / (2 * Math.sqrt(k * m));\n      var omega0 = Math.sqrt(k / m);\n      var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n      var x0 = this._toValue - this._startPosition;\n      var position = 0.0;\n      var velocity = 0.0;\n      var t = this._frameTime;\n      if (zeta < 1) {\n        var envelope = Math.exp(-zeta * omega0 * t);\n        position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n        velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n      } else {\n        var _envelope = Math.exp(-omega0 * t);\n        position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n        velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n      }\n      this._lastTime = now;\n      this._lastPosition = position;\n      this._lastVelocity = velocity;\n      this._onUpdate(position);\n      if (!this.__active) {\n        return;\n      }\n      var isOvershooting = false;\n      if (this._overshootClamping && this._stiffness !== 0) {\n        if (this._startPosition < this._toValue) {\n          isOvershooting = position > this._toValue;\n        } else {\n          isOvershooting = position < this._toValue;\n        }\n      }\n      var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n      var isDisplacement = true;\n      if (this._stiffness !== 0) {\n        isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n      }\n      if (isOvershooting || isVelocity && isDisplacement) {\n        if (this._stiffness !== 0) {\n          this._lastPosition = this._toValue;\n          this._lastVelocity = 0;\n          this._onUpdate(this._toValue);\n        }\n        this.__debouncedOnEnd({\n          finished: true\n        });\n        return;\n      }\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      _get(_getPrototypeOf(SpringAnimation.prototype), \"stop\", this).call(this);\n      this.__active = false;\n      clearTimeout(this._timeout);\n      global.cancelAnimationFrame(this._animationFrame);\n      this.__debouncedOnEnd({\n        finished: false\n      });\n    }\n  }]);\n  return SpringAnimation;\n}(Animation);\nexport default SpringAnimation;","map":{"version":3,"names":["Animation","SpringConfig","invariant","shouldUseNativeDriver","AnimatedColor","SpringAnimation","config","_config$overshootClam","_config$restDisplacem","_config$restSpeedThre","_config$velocity","_config$velocity2","_config$delay","_config$isInteraction","_config$iterations","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","_platformConfig","platformConfig","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","_config$stiffness","_config$damping","_config$mass","bounciness","speed","tension","friction","_stiffness","_damping","_mass","_config$bounciness","_config$speed","springConfig","fromBouncinessAndSpeed","_config$tension","_config$friction","_springConfig","fromOrigamiTensionAndFriction","_this$_initialVelocit","type","initialVelocity","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","start","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","_envelope","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","clearTimeout","global","cancelAnimationFrame"],"sources":["C:/Users/devandroid/Desktop/DAI-ReactNative/DAI/primerApp/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport Animation from './Animation';\nimport SpringConfig from '../SpringConfig';\nimport invariant from 'fbjs/lib/invariant';\nimport { shouldUseNativeDriver } from '../NativeAnimatedHelper';\nimport AnimatedColor from '../nodes/AnimatedColor';\nclass SpringAnimation extends Animation {\n  constructor(config) {\n    var _config$overshootClam, _config$restDisplacem, _config$restSpeedThre, _config$velocity, _config$velocity2, _config$delay, _config$isInteraction, _config$iterations;\n    super();\n    this._overshootClamping = (_config$overshootClam = config.overshootClamping) !== null && _config$overshootClam !== void 0 ? _config$overshootClam : false;\n    this._restDisplacementThreshold = (_config$restDisplacem = config.restDisplacementThreshold) !== null && _config$restDisplacem !== void 0 ? _config$restDisplacem : 0.001;\n    this._restSpeedThreshold = (_config$restSpeedThre = config.restSpeedThreshold) !== null && _config$restSpeedThre !== void 0 ? _config$restSpeedThre : 0.001;\n    this._initialVelocity = (_config$velocity = config.velocity) !== null && _config$velocity !== void 0 ? _config$velocity : 0;\n    this._lastVelocity = (_config$velocity2 = config.velocity) !== null && _config$velocity2 !== void 0 ? _config$velocity2 : 0;\n    this._toValue = config.toValue;\n    this._delay = (_config$delay = config.delay) !== null && _config$delay !== void 0 ? _config$delay : 0;\n    this._useNativeDriver = shouldUseNativeDriver(config);\n    this._platformConfig = config.platformConfig;\n    this.__isInteraction = (_config$isInteraction = config.isInteraction) !== null && _config$isInteraction !== void 0 ? _config$isInteraction : !this._useNativeDriver;\n    this.__iterations = (_config$iterations = config.iterations) !== null && _config$iterations !== void 0 ? _config$iterations : 1;\n    if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n      var _config$stiffness, _config$damping, _config$mass;\n      invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      this._stiffness = (_config$stiffness = config.stiffness) !== null && _config$stiffness !== void 0 ? _config$stiffness : 100;\n      this._damping = (_config$damping = config.damping) !== null && _config$damping !== void 0 ? _config$damping : 10;\n      this._mass = (_config$mass = config.mass) !== null && _config$mass !== void 0 ? _config$mass : 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      var _config$bounciness, _config$speed;\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n      var springConfig = SpringConfig.fromBouncinessAndSpeed((_config$bounciness = config.bounciness) !== null && _config$bounciness !== void 0 ? _config$bounciness : 8, (_config$speed = config.speed) !== null && _config$speed !== void 0 ? _config$speed : 12);\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      var _config$tension, _config$friction;\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      var _springConfig = SpringConfig.fromOrigamiTensionAndFriction((_config$tension = config.tension) !== null && _config$tension !== void 0 ? _config$tension : 40, (_config$friction = config.friction) !== null && _config$friction !== void 0 ? _config$friction : 7);\n      this._stiffness = _springConfig.stiffness;\n      this._damping = _springConfig.damping;\n      this._mass = 1;\n    }\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n  __getNativeAnimationConfig() {\n    var _this$_initialVelocit;\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: (_this$_initialVelocit = this._initialVelocity) !== null && _this$_initialVelocit !== void 0 ? _this$_initialVelocit : this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig\n    };\n  }\n  start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n    if (previousAnimation instanceof SpringAnimation) {\n      var internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n    var start = () => {\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n  getInternalState() {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime\n    };\n  }\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  onUpdate() {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    var MAX_STEPS = 64;\n    var now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n    var deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n    var c = this._damping;\n    var m = this._mass;\n    var k = this._stiffness;\n    var v0 = -this._initialVelocity;\n    var zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    var omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    var x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    var position = 0.0;\n    var velocity = 0.0;\n    var t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      var envelope = Math.exp(-zeta * omega0 * t);\n      position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      var _envelope = Math.exp(-omega0 * t);\n      position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    var isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    var isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n    if (isOvershooting || isVelocity && isDisplacement) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n      this.__debouncedOnEnd({\n        finished: true\n      });\n      return;\n    }\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n  stop() {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({\n      finished: false\n    });\n  }\n}\nexport default SpringAnimation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}