{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light-content\",\n      backgroundColor: \"#e6e9e5\"\n    }), _jsxs(SafeAreaView, {\n      style: styles.container,\n      children: [_jsx(Image, {\n        source: require(\"./src/images/welcomeImage.png\"),\n        style: styles.imagen\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Enter your name\"\n      }), _jsx(TextInput, {\n        placeholder: \"Enter your name\",\n        value: name,\n        onChangeText: setName,\n        style: styles.input\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return alert(`Hello, ${name}!`);\n          },\n          style: styles.button,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Say hello\"\n          })\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return setName(\"\");\n          },\n          style: [styles.button, {\n            backgroundColor: \"red\"\n          }],\n          children: _jsx(Text, {\n            style: [styles.text],\n            children: \"Reset\"\n          })\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"silver\"\n  },\n  title: {\n    fontSize: 20,\n    color: \"black\",\n    margin: 10\n  },\n  input: {\n    width: 200,\n    height: 40,\n    borderRadius: 5,\n    borderColor: \"black\",\n    borderWidth: 1,\n    padding: 10\n  },\n  button: {\n    width: 175,\n    height: 40,\n    borderRadius: 5,\n    backgroundColor: \"green\",\n    color: \"white\",\n    padding: 10,\n    alignItems: \"center\",\n    margin: 5\n  },\n  buttonContainer: {\n    height: 80,\n    width: 175,\n    flex: 2,\n    flexDirection: \"column\",\n    paddingTop: 10,\n    justifyContent: \"flex-start\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"white\"\n  },\n  imagen: {\n    width: 370,\n    height: 200\n  }\n});","map":{"version":3,"names":["StatusBar","useState","App","name","setName","styles","container","require","imagen","title","input","buttonContainer","alert","button","text","backgroundColor","StyleSheet","create","flex","justifyContent","alignItems","fontSize","color","margin","width","height","borderRadius","borderColor","borderWidth","padding","flexDirection","paddingTop"],"sources":["C:/Users/devandroid/Desktop/DAI-ReactNative/DAI/primerApp/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Pressable,\r\n  TextInput,\r\n  Image,\r\n} from \"react-native\";\r\n\r\nexport default function App() {\r\n  const [name, setName] = useState(\"\");\r\n  return (\r\n    <>\r\n      <StatusBar style=\"light-content\" backgroundColor = \"#e6e9e5\"></StatusBar>\r\n    \r\n      <SafeAreaView style={styles.container}>\r\n        <Image\r\n          source={\r\n            require(\"./src/images/welcomeImage.png\")\r\n          }\r\n         style={styles.imagen}\r\n        ></Image>\r\n        <Text style={styles.title}>Enter your name</Text>\r\n        <TextInput\r\n          placeholder=\"Enter your name\"\r\n          value={name}\r\n          onChangeText={setName}\r\n          style={styles.input}\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity\r\n            onPress={() => alert(`Hello, ${name}!`)}\r\n            style={styles.button}\r\n          >\r\n            <Text style={styles.text}>Say hello</Text>\r\n          </TouchableOpacity>\r\n\r\n          <Pressable\r\n            onPress={() => setName(\"\")}\r\n            style={[styles.button, { backgroundColor: \"red\" }]}\r\n          >\r\n            <Text style={[styles.text]}>Reset</Text>\r\n          </Pressable>\r\n        </View>\r\n      </SafeAreaView>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // height: \"90%\",\r\n    // paddingTop: \"10%\",\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"silver\",\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    color: \"black\",\r\n    margin: 10,\r\n  },\r\n  input: {\r\n    width: 200,\r\n    height: 40,\r\n    borderRadius: 5,\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    width: 175,\r\n    height: 40,\r\n    borderRadius: 5,\r\n    backgroundColor: \"green\",\r\n    color: \"white\",\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n    margin: 5,\r\n  },\r\n  buttonContainer: {\r\n    height: 80,\r\n    width: 175,\r\n    flex: 2,\r\n    flexDirection: \"column\",\r\n    paddingTop: 10,\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n  },\r\n  imagen:{\r\n    width: 370,\r\n    height: 200\r\n  }\r\n});\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYjC,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAwBD,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BE,IAAI;IAAEC,OAAO;EACpB,OACE;IAAA,WACE,KAAC,SAAS;MAAC,KAAK,EAAC,eAAe;MAAC,eAAe,EAAG;IAAS,EAAa,EAEzE,MAAC,YAAY;MAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAA,WACpC,KAAC,KAAK;QACJ,MAAM,EACJC,OAAO,iCACR;QACF,KAAK,EAAEF,MAAM,CAACG;MAAO,EACb,EACT,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACI,KAAM;QAAA,UAAC;MAAe,EAAO,EACjD,KAAC,SAAS;QACR,WAAW,EAAC,iBAAiB;QAC7B,KAAK,EAAEN,IAAK;QACZ,YAAY,EAAEC,OAAQ;QACtB,KAAK,EAAEC,MAAM,CAACK;MAAM,EACpB,EACF,MAAC,IAAI;QAAC,KAAK,EAAEL,MAAM,CAACM,eAAgB;QAAA,WAClC,KAAC,gBAAgB;UACf,OAAO,EAAE;YAAA,OAAMC,KAAK,CAAE,UAAST,IAAK,GAAE,CAAC;UAAA,CAAC;UACxC,KAAK,EAAEE,MAAM,CAACQ,MAAO;UAAA,UAErB,KAAC,IAAI;YAAC,KAAK,EAAER,MAAM,CAACS,IAAK;YAAA,UAAC;UAAS;QAAO,EACzB,EAEnB,KAAC,SAAS;UACR,OAAO,EAAE;YAAA,OAAMV,OAAO,CAAC,EAAE,CAAC;UAAA,CAAC;UAC3B,KAAK,EAAE,CAACC,MAAM,CAACQ,MAAM,EAAE;YAAEE,eAAe,EAAE;UAAM,CAAC,CAAE;UAAA,UAEnD,KAAC,IAAI;YAAC,KAAK,EAAE,CAACV,MAAM,CAACS,IAAI,CAAE;YAAA,UAAC;UAAK;QAAO,EAC9B;MAAA,EACP;IAAA,EACM;EAAA,EACd;AAEP;AAEA,IAAMT,MAAM,GAAGW,UAAU,CAACC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IAGTY,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBL,eAAe,EAAE;EACnB,CAAC;EACDN,KAAK,EAAE;IACLY,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;EACV,CAAC;EACDb,KAAK,EAAE;IACLc,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE;EACX,CAAC;EACDhB,MAAM,EAAE;IACNW,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfX,eAAe,EAAE,OAAO;IACxBO,KAAK,EAAE,OAAO;IACdO,OAAO,EAAE,EAAE;IACXT,UAAU,EAAE,QAAQ;IACpBG,MAAM,EAAE;EACV,CAAC;EACDZ,eAAe,EAAE;IACfc,MAAM,EAAE,EAAE;IACVD,KAAK,EAAE,GAAG;IACVN,IAAI,EAAE,CAAC;IACPY,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,EAAE;IACdZ,cAAc,EAAE,YAAY;IAC5BC,UAAU,EAAE;EACd,CAAC;EACDN,IAAI,EAAE;IACJQ,KAAK,EAAE;EACT,CAAC;EACDd,MAAM,EAAC;IACLgB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}